function cmap = custom_colormaps(map_name,n,varargin)
%% Script:
% Description:
% Example:
% Required Functions:
% INPUTS ----------------------------------------------------------------
% map_name: string indicating name of the colormap that user will use
% n:
% varargin - 'PropertyName','PropertyValue'
%   ''
% OUTPUTS ---------------------------------------------------------------
%
%
%  Date           Author            E-mail                      Version
%  2  Aug  2012   Amanda Gaudreau   amanda.gaudreau@gmail.com     1
if ~exist('n'); n=256; end

PropertyNames = varargin(1:2:length(varargin));
PropertyVal = varargin(2:2:length(varargin));

if strmatch('nbins',PropertyNames)
  nbins = PropertyVal{strmatch('nbins',PropertyNames)};
else
  nbins = 1e3;
end

rgbstr = 'rgb';
if ~isstr(map_name)
  mapbin = find(map_name);
  map_name = rgbstr(mapbin);
end

switch map_name
  case 'fire'
    f256 = [0,0,0;0.00762923341244459,0,0.0158288776874542;0.0152584668248892,0,0.0316577553749085;0.0228877011686564,0,0.0474866330623627;0.0305169336497784,0,0.0633155107498169;0.0381461679935455,0,0.0791443884372711;0.0457754023373127,0,0.0949732661247253;0.0534046366810799,0,0.110802136361599;0.0610338672995567,0,0.126631021499634;0.0686631053686142,0,0.142459899187088;0.0762923359870911,0,0.158288776874542;0.0839215666055679,0,0.174117654561996;0.0915508046746254,0,0.189946532249451;0.0991800352931023,0,0.205775409936905;0.106809273362160,0,0.221604272723198;0.114438503980637,0,0.237433150410652;0.122067734599113,0,0.253262042999268;0.129696965217590,0,0.269090920686722;0.137326210737228,0,0.284919798374176;0.144955441355705,0,0.300748676061630;0.152584671974182,0,0.316577553749085;0.160213902592659,0,0.332406431436539;0.167843133211136,0,0.348235309123993;0.175472378730774,0,0.364064186811447;0.183101609349251,0,0.379893064498901;0.190730839967728,0,0.395721942186356;0.198360070586205,0,0.411550819873810;0.205989301204681,0,0.427379697561264;0.213618546724319,0,0.443208545446396;0.221247777342796,0,0.459037423133850;0.228877007961273,0,0.474866300821304;0.236506238579750,0,0.490695178508759;0.244135469198227,0,0.506524085998535;0.251764714717865,0,0.522352933883667;0.259393930435181,0,0.538181841373444;0.267023175954819,0,0.554010689258575;0.274652421474457,0,0.569839596748352;0.282281637191772,0,0.585668444633484;0.289910882711411,0,0.601497352123261;0.297540098428726,0,0.617326200008392;0.305169343948364,0,0.633155107498169;0.312798589468002,0,0.648983955383301;0.320427805185318,0,0.664812862873077;0.328057050704956,0,0.680641710758209;0.335686266422272,0,0.696470618247986;0.343315511941910,0,0.712299466133118;0.350944757461548,0,0.728128373622894;0.358573973178864,0,0.743957221508026;0.366203218698502,0,0.759786128997803;0.373832434415817,0,0.775614976882935;0.381461679935455,0,0.791443884372711;0.389090925455093,0,0.807272732257843;0.396720141172409,0,0.823101639747620;0.404349386692047,0,0.838930487632752;0.411978602409363,0,0.854759395122528;0.419607847929001,0,0.870588243007660;0.426400572061539,0.000700280128512532,0.860014021396637;0.433193296194077,0.00140056025702506,0.849439799785614;0.439985990524292,0.00210084044374526,0.838865578174591;0.446778714656830,0.00280112051405013,0.828291296958923;0.453571438789368,0.00350140058435500,0.817717075347900;0.460364162921906,0.00420168088749051,0.807142853736877;0.467156857252121,0.00490196095779538,0.796568632125855;0.473949581384659,0.00560224102810025,0.785994410514832;0.480742305517197,0.00630252109840512,0.775420188903809;0.487535029649735,0.00700280116870999,0.764845967292786;0.494327723979950,0.00770308170467615,0.754271745681763;0.501120448112488,0.00840336177498102,0.743697464466095;0.507913172245026,0.00910364184528589,0.733123242855072;0.514705896377564,0.00980392191559076,0.722549021244049;0.521498620510101,0.0105042019858956,0.711974799633026;0.528291344642639,0.0112044820562005,0.701400578022003;0.535084068775177,0.0119047621265054,0.690826356410980;0.541876733303070,0.0126050421968102,0.680252134799957;0.548669457435608,0.0133053222671151,0.669677853584290;0.555462181568146,0.0140056023374200,0.659103631973267;0.562254905700684,0.0147058833390474,0.648529410362244;0.569047629833221,0.0154061634093523,0.637955188751221;0.575840353965759,0.0161064434796572,0.627380967140198;0.582633078098297,0.0168067235499620,0.616806745529175;0.589425802230835,0.0175070036202669,0.606232523918152;0.596218466758728,0.0182072836905718,0.595658302307129;0.603011190891266,0.0189075637608767,0.585084021091461;0.609803915023804,0.0196078438311815,0.574509799480438;0.616596639156342,0.0203081239014864,0.563935577869415;0.623389363288879,0.0210084039717913,0.553361356258392;0.630182087421417,0.0217086840420961,0.542787134647369;0.636974811553955,0.0224089641124010,0.532212913036346;0.643767535686493,0.0231092441827059,0.521638691425324;0.650560259819031,0.0238095242530108,0.511064410209656;0.657352924346924,0.0245098043233156,0.500490188598633;0.664145648479462,0.0252100843936205,0.489915966987610;0.670938372612000,0.0259103644639254,0.479341745376587;0.677731096744537,0.0266106445342302,0.468767523765564;0.684523820877075,0.0273109246045351,0.458193302154541;0.691316545009613,0.0280112046748400,0.447619050741196;0.698109269142151,0.0287114847451448,0.437044829130173;0.704901993274689,0.0294117666780949,0.426470607519150;0.711694717407227,0.0301120467483997,0.415896356105804;0.718487381935120,0.0308123268187046,0.405322134494782;0.725280106067658,0.0315126068890095,0.394747912883759;0.732072830200195,0.0322128869593143,0.384173691272736;0.738865554332733,0.0329131670296192,0.373599439859390;0.745658278465271,0.0336134470999241,0.363025218248367;0.752451002597809,0.0343137271702290,0.352450996637344;0.759243726730347,0.0350140072405338,0.341876775026321;0.766036450862885,0.0357142873108387,0.331302523612976;0.772829115390778,0.0364145673811436,0.320728302001953;0.779621839523315,0.0371148474514484,0.310154080390930;0.786414563655853,0.0378151275217533,0.299579858779907;0.793207287788391,0.0385154075920582,0.289005607366562;0.800000011920929,0.0392156876623631,0.278431385755539;0.801999986171722,0.0476862750947475,0.275647073984146;0.804000020027161,0.0561568625271320,0.272862762212753;0.805999994277954,0.0646274536848068,0.270078450441361;0.808000028133392,0.0730980411171913,0.267294138669968;0.810000002384186,0.0815686285495758,0.264509826898575;0.812000036239624,0.0900392159819603,0.261725515127182;0.814000010490418,0.0985098034143448,0.258941203355789;0.815999984741211,0.106980390846729,0.256156861782074;0.818000018596649,0.115450985729694,0.253372550010681;0.819999992847443,0.123921573162079,0.250588238239288;0.822000026702881,0.132392153143883,0.247803926467896;0.824000000953674,0.140862748026848,0.245019614696503;0.826000034809113,0.149333328008652,0.242235302925110;0.828000009059906,0.157803922891617,0.239450991153717;0.829999983310700,0.166274517774582,0.236666679382324;0.832000017166138,0.174745097756386,0.233882367610931;0.833999991416931,0.183215692639351,0.231098055839539;0.836000025272369,0.191686272621155,0.228313729166985;0.837999999523163,0.200156867504120,0.225529417395592;0.840000033378601,0.208627447485924,0.222745105624199;0.842000007629395,0.217098042368889,0.219960793852806;0.843999981880188,0.225568637251854,0.217176482081413;0.846000015735626,0.234039217233658,0.214392170310020;0.847999989986420,0.242509812116623,0.211607858538628;0.850000023841858,0.250980406999588,0.208823531866074;0.851999998092651,0.259450972080231,0.206039220094681;0.854000031948090,0.267921566963196,0.203254908323288;0.856000006198883,0.276392161846161,0.200470596551895;0.857999980449677,0.284862756729126,0.197686284780502;0.860000014305115,0.293333321809769,0.194901973009110;0.861999988555908,0.301803916692734,0.192117661237717;0.864000022411346,0.310274511575699,0.189333349466324;0.865999996662140,0.318745106458664,0.186549022793770;0.868000030517578,0.327215701341629,0.183764711022377;0.870000004768372,0.335686266422272,0.180980399250984;0.871999979019165,0.344156861305237,0.178196087479591;0.874000012874603,0.352627456188202,0.175411775708199;0.875999987125397,0.361098051071167,0.172627463936806;0.878000020980835,0.369568616151810,0.169843152165413;0.879999995231628,0.378039211034775,0.167058825492859;0.882000029087067,0.386509805917740,0.164274513721466;0.884000003337860,0.394980400800705,0.161490201950073;0.885999977588654,0.403450995683670,0.158705890178680;0.888000011444092,0.411921560764313,0.155921578407288;0.889999985694885,0.420392155647278,0.153137266635895;0.892000019550324,0.428862750530243,0.150352954864502;0.893999993801117,0.437333345413208,0.147568628191948;0.896000027656555,0.445803940296173,0.144784316420555;0.898000001907349,0.454274505376816,0.142000004649162;0.899999976158142,0.462745100259781,0.139215692877769;0.902000010013580,0.471215695142746,0.136431381106377;0.903999984264374,0.479686290025711,0.133647069334984;0.906000018119812,0.488156855106354,0.130862757563591;0.907999992370606,0.496627449989319,0.128078430891037;0.910000026226044,0.505098044872284,0.125294119119644;0.912000000476837,0.513568639755249,0.122509807348251;0.914000034332275,0.522039234638214,0.119725495576859;0.916000008583069,0.530509829521179,0.116941183805466;0.917999982833862,0.538980424404144,0.114156864583492;0.920000016689301,0.547450959682465,0.111372552812099;0.921999990940094,0.555921554565430,0.108588241040707;0.924000024795532,0.564392149448395,0.105803929269314;0.925999999046326,0.572862744331360,0.103019610047340;0.928000032901764,0.581333339214325,0.100235298275948;0.930000007152557,0.589803934097290,0.0974509865045548;0.931999981403351,0.598274528980255,0.0946666747331619;0.934000015258789,0.606745123863220,0.0918823555111885;0.935999989509583,0.615215718746185,0.0890980437397957;0.938000023365021,0.623686254024506,0.0863137319684029;0.939999997615814,0.632156848907471,0.0835294127464294;0.942000031471252,0.640627443790436,0.0807451009750366;0.944000005722046,0.649098038673401,0.0779607892036438;0.945999979972839,0.657568633556366,0.0751764774322510;0.948000013828278,0.666039228439331,0.0723921582102776;0.949999988079071,0.674509823322296,0.0696078464388847;0.952000021934509,0.682980418205261,0.0668235346674919;0.953999996185303,0.691451013088226,0.0640392154455185;0.956000030040741,0.699921548366547,0.0612549036741257;0.958000004291534,0.708392143249512,0.0584705919027329;0.959999978542328,0.716862738132477,0.0556862764060497;0.962000012397766,0.725333333015442,0.0529019646346569;0.963999986648560,0.733803927898407,0.0501176491379738;0.966000020503998,0.742274522781372,0.0473333373665810;0.967999994754791,0.750745117664337,0.0445490218698978;0.970000028610230,0.759215712547302,0.0417647063732147;0.972000002861023,0.767686307430267,0.0389803946018219;0.973999977111816,0.776156842708588,0.0361960791051388;0.976000010967255,0.784627437591553,0.0334117673337460;0.977999985218048,0.793098032474518,0.0306274518370628;0.980000019073486,0.801568627357483,0.0278431382030249;0.981999993324280,0.810039222240448,0.0250588245689869;0.984000027179718,0.818509817123413,0.0222745109349489;0.986000001430512,0.826980412006378,0.0194901973009110;0.987999975681305,0.835451006889343,0.0167058836668730;0.990000009536743,0.843921601772308,0.0139215691015124;0.991999983787537,0.852392137050629,0.0111372554674745;0.994000017642975,0.860862731933594,0.00835294183343649;0.995999991893768,0.869333326816559,0.00556862773373723;0.998000025749207,0.877803921699524,0.00278431386686862;1,0.886274516582489,0;1,0.888859212398529,0.0227272734045982;1,0.891443848609924,0.0454545468091965;1,0.894028544425964,0.0681818202137947;1,0.896613180637360,0.0909090936183929;1,0.899197876453400,0.113636367022991;1,0.901782512664795,0.136363640427589;1,0.904367208480835,0.159090906381607;1,0.906951904296875,0.181818187236786;1,0.909536540508270,0.204545453190804;1,0.912121236324310,0.227272734045982;1,0.914705872535706,0.250000000000000;1,0.917290568351746,0.272727280855179;1,0.919875204563141,0.295454531908035;1,0.922459900379181,0.318181812763214;1,0.925044596195221,0.340909093618393;1,0.927629232406616,0.363636374473572;1,0.930213928222656,0.386363625526428;1,0.932798564434052,0.409090906381607;1,0.935383260250092,0.431818187236786;1,0.937967896461487,0.454545468091965;1,0.940552592277527,0.477272719144821;1,0.943137288093567,0.500000000000000;1,0.945721924304962,0.522727251052856;1,0.948306620121002,0.545454561710358;1,0.950891256332398,0.568181812763214;1,0.953475952148438,0.590909063816071;1,0.956060588359833,0.613636374473572;1,0.958645284175873,0.636363625526428;1,0.961229920387268,0.659090936183929;1,0.963814616203308,0.681818187236786;1,0.966399312019348,0.704545438289642;1,0.968983948230743,0.727272748947144;1,0.971568644046783,0.750000000000000;1,0.974153280258179,0.772727251052856;1,0.976737976074219,0.795454561710358;1,0.979322612285614,0.818181812763214;1,0.981907308101654,0.840909063816071;1,0.984492003917694,0.863636374473572;1,0.987076640129089,0.886363625526428;1,0.989661335945129,0.909090936183929;1,0.992245972156525,0.931818187236786;1,0.994830667972565,0.954545438289642;1,0.997415304183960,0.977272748947144;1,1,1;];
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = f256([1,i],:);
    else
      cmap = f256;
    end
  case 'firec'
    %baseclrs = [0,0,0;0.114438503980637,0,0.237433150410652;0.23650628579750,0,0.490695178508759;0.358573973178864,0,0.743957221508026;0.473949581384659,0.00560224102810025,0.785994410514832;0.582633078098297,0.0168067235499620,0.616806745529175;0.691316545009613,0.0280112046748400,0.447619050741196;0.800000011920929,0.0392156876623631,0.278431385755539;0.832000017166138,0.174745097756386,0.233882367610931;0.864000022411346,0.310274511575699,0.189333349466324;0.896000027656555,0.445803940296173,0.144784316420555;0.928000032901764,0.581333339214325,0.100235298275948;0.959999978542328,0.716862738132477,0.0556862764060497;0.991999983787537,0.852392137050629,0.0111372554674745;1,0.917290568351746,0.272727280855179;0.500000000000000,0.958645284175873,0.636363625526428;0,1,1];%;0.1,0.1,1];
    baseclrs = [0.23650628579750,0,0.490695178508759;0.358573973178864,0,0.743957221508026;0.473949581384659,0.00560224102810025,0.785994410514832;0.582633078098297,0.0168067235499620,0.616806745529175;0.691316545009613,0.0280112046748400,0.447619050741196;0.800000011920929,0.0392156876623631,0.278431385755539;0.832000017166138,0.174745097756386,0.233882367610931;0.864000022411346,0.310274511575699,0.189333349466324;0.896000027656555,0.445803940296173,0.144784316420555;0.928000032901764,0.581333339214325,0.100235298275948;0.959999978542328,0.716862738132477,0.0556862764060497;0.991999983787537,0.852392137050629,0.0111372554674745;1,0.917290568351746,0.272727280855179;0.500000000000000,0.958645284175873,0.636363625526428;0,1,1];%;0.1,0.1,1];
    b256 = colormapFromPoints(baseclrs);
    
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = b256([1,i],:);
    else
      cmap = b256;
    end
  case 'livingimg'
    baseclrs = [111,0,255;18,0,255;0,244,255;50,255,0;225,255,0;255,0,0]./255;
    b256 = colormapFromPoints(baseclrs);
    
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = b256([1,i],:);
    else
      cmap = b256;
    end
  case 'r'
    cmap = [[0:256/n:255]',zeros(n,2)]./256;
  case 'g'
    cmap = [zeros(n,1),[0:256/n:255]',zeros(n,1)]./256;
  case 'b'
    cmap = [zeros(n,2),[0:256/n:255]']./256;
  case 'rg' % YELLOW
    cmap = [[0:256/n:255]',[0:256/n:255]',zeros(n,1)]./256;
  case 'y' % YELLOW
    cmap = [[0:256/n:255]',[0:256/n:255]',zeros(n,1)]./256;
  case 'rb' % MAGENTA
    cmap = [[0:256/n:255]',zeros(n,1),[0:256/n:255]']./256;
  case 'm' % MAGENTA
    cmap = [[0:256/n:255]',zeros(n,1),[0:256/n:255]']./256;
  case 'gb' % CYAN
    cmap = [zeros(n,1),[0:256/n:255]',[0:256/n:255]']./256;
  case 'c' % CYAN
    cmap = [zeros(n,1),[0:256/n:255]',[0:256/n:255]']./256;
  case 'jet'
    cmap = jet(n);
  case 'gray'
    cmap = gray(n);
  case 'bone'
    cmap = bone(n);
  case 'winter'
    cmap = winter(n);
  case 'cool'
    cmap = cool(n);
  case 'blues'
    baseclrs = [255,247,251;236,231,242;208,209,230;166,189,219;116,169,207;54,144,192;5,112,176;4,90,141;2,56,88]./255; %
    baseclrs = flipud(baseclrs);
    b256 = colormapFromPoints(baseclrs);
    
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = b256([1,i],:);
    else
      cmap = b256;
    end
    
  case 'y2b'
    baseclrs = [255,255,217;237,248,177;199,233,180;127,205,187;65,182,196;29,145,192;34,94,168;37,52,148;8,29,88]./255;
    baseclrs = flipud(baseclrs);
    b256 = colormapFromPoints(baseclrs);
    
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = b256([1,i],:);
    else
      cmap = b256;
    end
  case 'purp'
    baseclrs = [247,252,253;224,236,244;191,211,230;...
      158,188,218;140,150,198;140,107,177;136,65,157;...
      129,15,124;77,0,75]./255;
    b256 = colormapFromPoints(baseclrs);
    
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = b256([1,i],:);
    else
      cmap = b256;
    end
  case 'purp2b'
    baseclrs = [37,52,148;34,94,168;29,145,192;65,182,196;158,188,218;140,150,198;140,107,177;136,65,157]./255;
    baseclrs = flipud(baseclrs);
    b256 = colormapFromPoints(baseclrs);
    
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = b256([1,i],:);
    else
      cmap = b256;
    end
  case 'purp2c'
    baseclrs = [37,52,148;34,94,168;29,145,192;65,182,196;135,187,212;158,188,218;140,150,198;140,107,177;136,65,157]./255;
    baseclrs = flipud(baseclrs);
    b256 = colormapFromPoints(baseclrs);
    
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = b256([1,i],:);
    else
      cmap = b256;
    end
  case 'jetred'
    baseclrs = [0,0,0.750000000000000;0,0,1;0,0.250000000000000,1;0,0.500000000000000,1;0,0.750000000000000,1;0,1,1;0.250000000000000,1,0.750000000000000;0.500000000000000,1,0.500000000000000;0.750000000000000,1,0.250000000000000;1,1,0;1,0.750000000000000,0;1,0.500000000000000,0;1,0.250000000000000,0;1,0,0];
    b256 = colormapFromPoints(baseclrs);
    
    if n ~= 256
      isel = [1:256]./(256/(n-1));
      [v,i] = min(abs(repmat(isel,n-1,1) - repmat([1:n-1]',1,length(isel)))');
      cmap = b256([1,i],:);
    else
      cmap = b256;
    end
    %     cmap(1,:) = 0;
end
